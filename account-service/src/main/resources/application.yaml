spring:
  application:
    name: account-service
  jpa:
    hibernate:
      ddl-auto: validate
  datasource:
    url: jdbc:postgresql://localhost:5434/${ACCOUNT_POSTGRES_DB:account_service_db}
    username: ${ACCOUNT_POSTGRES_USER:account_service_root}
    password: ${ACCOUNT_POSTGRES_PASSWORD:account_service_password}
  data:
    redis:
      username: default
      password: ${ACCOUNT_REDIS_PASSWORD:account_service_redis_password}
      host: localhost
      port: 6379
      timeout: 5000
      connect-timeout: 5000

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.type.mapping: "com.sopuro.payment_service.dtos.ReleaseWithheldBalanceMessageDTO:com.sopuro.account_service.dtos.ReleaseWithheldBalanceMessageDTO,com.sopuro.payment_service.entities.PaymentRequestEntity:com.sopuro.account_service.dtos.PaymentRequestMessageDTO"
        spring.json.trusted.packages: '*'
        spring.json.use.type.headers: true
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      transaction-id-prefix: account-service
      properties:
        auto:
          create:
            topics:
              enable: true

server:
  port: 8081

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
