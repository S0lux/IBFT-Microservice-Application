spring:
  application:
    name: notification-service

  kafka:
    bootstrap-servers: localhost:9092

    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.type.mapping: 'com.sopuro.payment_service.dtos.NotificationPayloadMessage:com.sopuro.notification_service.dtos.NotificationPayloadMessage'
        spring.json.trusted.packages: '*'

    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      transaction-id-prefix: notification-service

  mail:
    host: ${SMTP_HOST}
    port: ${SMTP_PORT}
    username: ${SMTP_USERNAME}
    password: ${SMTP_PASSWORD}
    from: ${SMTP_FROM_ADDRESS}

  cloud:
    aws:
      credentials:
        access-key: ${SES_ACCESS_KEY}
        secret-key: ${SES_SECRET_KEY}

      ses:
        region: ${SES_REGION}

server:
  port: ${PORT:8084}

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
